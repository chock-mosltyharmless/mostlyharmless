void main(void) {                                  
vec3 color = vec3(0.);                                                
vec3 rayPos = vec3(0., 0., 0. - 8.);
vec3 rayDir = normalize(vec3(ppos, 2.));
vec3 totalColor = vec3(0.);                                           
float totalDensity = 0.;                                              
                                                                      
rayDir.xz = rotate(rayDir.xz, time);                                  
rayDir.xy = rotate(rayDir.xy, time);                                  
rayPos.xz = rotate(rayPos.xz, time);                                  
rayPos.xy = rotate(rayPos.xy, time);                                  
                                                                      
for (int i = 0; i < 100 && length(rayPos) < 12. &&   
totalDensity < 0.95; i++) {         

float implicit = 10.;
                                                                      
float density = smoothstep(0., -0.3, implicit);   
totalDensity += (1. - totalDensity) * density;  
totalDensity += 0.01;              
totalColor += vec3(0.);

rayPos += rayDir * max(0.03, abs(implicit) * .5f);
}                                                                     
                                                                      
color = mix(color, totalColor, totalDensity);
                                                                      
gl_FragColor = vec4(color, 1.0);
}                                                                     
                                                                      
                                                                      
