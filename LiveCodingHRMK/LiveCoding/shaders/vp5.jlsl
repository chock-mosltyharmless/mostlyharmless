vec2 voronoi(vec2 pos, float t) {                                     
                                                                      
float minDist = 100.;                                                 
float minIdx = 0.;                                                    
                                                                      
for (float i = 0.; i < 7.; i = i + 1.) {                              
vec2 midPos = vec2(sin(time + i), sin(time + 2.*i));                  
float curDist = length(midPos - pos);                                 
if (curDist < minDist) {                                              
minDist = min(curDist, minDist);                                      
minIdx = i;                                                           
}                                                                     
}                                                                     
                                                                      
return vec2(minDist, minIdx);                                         
}                                                                     
                                                                      
void main(void) {                                                     
vec3 color = vec3(0.);                                                
                                                                      
vec2 distidx = voronoi(ppos, time);                                   
float dist = distidx.r;                                               
float idx = distidx.g;                                                
                                                                      
color = mix(vec3(0.5, 0.8, 1.3),                                      
vec3(1.3, 0.9, 0.6), idx*0.14) *                                      
1.-dist*5.*slider1 * (cos(dist*dist*slider3*100.)+1.0) -              
vec3(slider2);                                                        
                                                                      
color *= (1. - knob9);                                                
color = mix(color, vec3(dot(color, vec3(0.3,0.5, 0.2))), knob8*1.3);  
gl_FragColor = vec4(color, 1.0);                                      
}                                                                     
                                                                      
