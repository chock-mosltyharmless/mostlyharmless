vec2 voronoi(vec2 pos, float t) {                                     
                                                                      
float minDist = 100.;                                                 
float minIdx = 0.;                                                    
                                                                      
for (float i = 0.; i < 7.; i = i + 1.) {                              
vec2 midPos = vec2(sin(time + i + spike*knob1), sin(time + 2.*i));    
float curDist = length(midPos - pos);                                 
if (curDist < minDist) {                                              
minDist = min(curDist, minDist);                                      
minIdx = i;                                                           
}                                                                     
}                                                                     
                                                                      
float minDist2 = 100.;                                                
for (float i = 0.; i < 7.; i = i + 1) {                               
vec2 midPos = vec2(sin(time + i + spike*knob1), sin(time + 2.*i));    
float curDist = length(midPos - pos);                                 
if (curDist < minDist2 && abs(i-minIdx) > 0.1) {                      
minDist2 = min(curDist, minDist2);                                    
}                                                                     
}                                                                     
                                                                      
return vec2(minDist2 - minDist, minIdx);                              
}                                                                     
                                                                      
void main(void) {                                                     
vec3 color = vec3(0.);                                                
                                                                      
vec2 distidx = voronoi(ppos, time);                                   
float dist = distidx.r;                                               
float idx = distidx.g;                                                
                                                                      
color += mix(vec3(0.5, 0.8, 1.3),                                     
vec3(1.3, 0.9, 0.6), idx*0.14) * knob2;                               
                                                                      
color += vec3(knob3) *                                                
max(0., 1.-2.*slider1 * (cos(dist*slider2*50.)+1.0));                 
                                                                      
color -= vec3(knob4);                                                 
                                                                      
color = mix(color, vec3(2.0, 1.7, 1.) *                               
smoothstep(slider3*.5, slider4*.5, dist),                             
smoothstep(slider3*.5, slider4*.5, dist));                            
                                                                      
color *= (1. - knob9);                                                
color = mix(color, vec3(dot(color, vec3(0.3,0.5, 0.2))), knob8*1.3);  
gl_FragColor = vec4(color, 1.0);                                      
}                                                                     
                                                                      
