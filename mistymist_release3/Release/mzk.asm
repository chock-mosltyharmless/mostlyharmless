; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Users\Joachim Hofer\Documents\mostlyharmless\mistymist_release3\i4k_OGL\src\mzk.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?wave@@3PAY01NA					; wave
PUBLIC	?d_amplitude@@3PAY0M@NA				; d_amplitude
PUBLIC	?noise@@3PANA					; noise
PUBLIC	?outwave@@3PAY01NA				; outwave
PUBLIC	?pitch@@3PADA					; pitch
PUBLIC	?frameStep@@3PADA				; frameStep
PUBLIC	?amplitude@@3PAY0M@DA				; amplitude
_BSS	SEGMENT
?wave@@3PAY01NA DQ 01826d0H DUP (?)			; wave
?d_amplitude@@3PAY0M@NA DQ 037d4H DUP (?)		; d_amplitude
?noise@@3PANA DQ 0100000H DUP (?)			; noise
?outwave@@3PAY01NA DQ 0940a70H DUP (?)			; outwave
_BSS	ENDS
CONST	SEGMENT
_instrument DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	00H
	DB	01H
	DB	02H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
_startTime DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ecH
	DB	01H
	DB	03H
	DB	01H
	DB	03H
	DB	01H
	DB	03H
	DB	01H
_volume	DB	0feH
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	ORG $+1
CONST	ENDS
_DATA	SEGMENT
?pitch@@3PADA DB 05dH					; pitch
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fdH
	DB	0fdH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0feH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0f8H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fdH
	DB	0fcH
	DB	00H
	DB	0fcH
	DB	0fdH
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	0feH
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fdH
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	03H
	DB	02H
	DB	0ffH
	DB	0feH
	DB	0fdH
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	04H
	DB	03H
	DB	00H
	DB	0feH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	02H
	DB	0feH
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0dcH
	DB	02H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fdH
	DB	00H
	DB	0feH
	DB	02H
	DB	0feH
	DB	00H
	DB	02H
	DB	03H
	DB	0fbH
	DB	0fdH
	DB	00H
	DB	05H
	DB	03H
	DB	0fdH
	DB	0feH
	DB	02H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fdH
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	0feH
	DB	00H
	DB	0fdH
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	00H
	DB	0fbH
	DB	00H
	DB	05H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	0feH
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	0feH
	DB	02H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	0feH
	DB	02H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	0feH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+2
?frameStep@@3PADA DB 00H				; frameStep
	DB	01H
	DB	01H
	DB	03H
	DB	06H
	DB	04H
	DB	06H
	DB	07H
	DB	00H
	DB	03H
	DB	012H
	DB	02H
	DB	02H
	DB	03H
	DB	05H
	DB	016H
	DB	04H
	DB	04H
	DB	01H
	DB	03H
	DB	04H
	DB	03H
	DB	02H
	DB	06H
	DB	03H
	DB	02H
	DB	06H
	DB	00H
	DB	03H
	DB	01H
	DB	03H
	DB	08H
	DB	09H
	DB	0dH
	DB	07H
	DB	02H
	DB	02H
	DB	01H
	DB	05H
	DB	04H
	DB	016H
	DB	0dH
	DB	08H
	DB	08H
	DB	020H
	DB	01H
	DB	00H
	DB	03H
	DB	06H
	DB	06H
	DB	05H
	DB	05H
	DB	04H
	DB	05H
	DB	08H
	DB	0cH
	DB	0cH
	DB	06H
	DB	08H
	DB	05H
	DB	04H
	DB	04H
	DB	06H
	DB	02H
	DB	0cH
	DB	0fH
	DB	03H
	DB	0bH
	DB	02H
	DB	0aH
	DB	05H
	DB	03H
	DB	0bH
	DB	01H
	DB	02H
	DB	03H
	DB	03H
	DB	0eH
	DB	05H
	DB	0dH
	DB	05H
	DB	07H
	DB	05H
	DB	023H
	DB	01H
	DB	03H
	DB	04H
	DB	03H
	DB	03H
	DB	06H
	DB	03H
	DB	02H
	DB	04H
	DB	06H
	DB	06H
	DB	06H
	DB	04H
	DB	0dH
	DB	05H
	DB	05H
	DB	05H
	DB	03H
	DB	05H
	DB	07H
	DB	08H
	DB	07H
	DB	0dH
	DB	04H
	DB	02H
	DB	04H
	DB	03H
	DB	08H
	DB	03H
	DB	03H
	DB	07H
	DB	05H
	DB	05H
	DB	02H
	DB	03H
	DB	03H
	DB	03H
	DB	06H
	DB	03H
	DB	03H
	DB	04H
	DB	02H
	DB	01H
	DB	04H
	DB	03H
	DB	02H
	DB	04H
	DB	031H
	DB	04H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	04H
	DB	04H
	DB	09H
	DB	04H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	04H
	DB	04H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	09H
	DB	05H
	DB	05H
	ORG $+5
?amplitude@@3PAY0M@DA DB 00H				; amplitude
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	09H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	04H
	DB	0fdH
	DB	0feH
	DB	01H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	0fdH
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	01H
	DB	00H
	DB	0feH
	DB	0ffH
	DB	00H
	DB	02H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	01H
	DB	01H
	DB	0fdH
	DB	02H
	DB	01H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	03H
	DB	0ffH
	DB	0fdH
	DB	01H
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	02H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	01H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	0ffH
	DB	0feH
	DB	01H
	DB	0feH
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	04H
	DB	01H
	DB	01H
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	01H
	DB	0ffH
	DB	0feH
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	01H
	DB	01H
	DB	0feH
	DB	0ffH
	DB	01H
	DB	0fcH
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	0feH
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	03H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	02H
	DB	0feH
	DB	00H
	DB	01H
	DB	0ffH
	DB	0feH
	DB	0feH
	DB	03H
	DB	0fdH
	DB	00H
	DB	02H
	DB	0ffH
	DB	00H
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	02H
	DB	0feH
	DB	02H
	DB	03H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	01H
	DB	02H
	DB	0ffH
	DB	02H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	02H
	DB	0feH
	DB	0ffH
	DB	01H
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	01H
	DB	0ffH
	DB	00H
	DB	03H
	DB	0ffH
	DB	0fcH
	DB	00H
	DB	00H
	DB	02H
	DB	0ffH
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	02H
	DB	01H
	DB	01H
	DB	00H
	DB	0ffH
	DB	0feH
	DB	02H
	DB	01H
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	00H
	DB	02H
	DB	0feH
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	0feH
	DB	01H
	DB	02H
	DB	02H
	DB	01H
	DB	0ffH
	DB	02H
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	0fdH
	DB	0feH
	DB	0ffH
	DB	02H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	01H
	DB	0ffH
	DB	0feH
	DB	02H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	00H
	DB	01H
	DB	0ffH
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0feH
	DB	03H
	DB	01H
	DB	00H
	DB	0fdH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0feH
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	02H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	03H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	01H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	0feH
	DB	0ffH
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	0fdH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	02H
	DB	0ffH
	DB	03H
	DB	0ffH
	DB	00H
	DB	02H
	DB	0feH
	DB	0ffH
	DB	01H
	DB	0fdH
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	02H
	DB	01H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	02H
	DB	0feH
	DB	00H
	DB	02H
	DB	0ffH
	DB	02H
	DB	02H
	DB	0ffH
	DB	0fdH
	DB	00H
	DB	00H
	DB	02H
	DB	01H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	01H
	DB	00H
	DB	0ffH
	DB	0f4H
	DB	00H
	DB	01H
	DB	02H
	DB	01H
	DB	01H
	DB	01H
	DB	0ffH
	DB	02H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	01H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	0fdH
	DB	01H
	DB	0feH
	DB	00H
	DB	03H
	DB	0fdH
	DB	01H
	DB	0ffH
	DB	00H
	DB	0feH
	DB	01H
	DB	0ffH
	DB	02H
	DB	0fdH
	DB	03H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	0feH
	DB	00H
	DB	04H
	DB	0ffH
	DB	0feH
	DB	01H
	DB	00H
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	02H
	DB	0fbH
	DB	01H
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	0ffH
	DB	03H
	DB	00H
	DB	02H
	DB	00H
	DB	0feH
	DB	02H
	DB	02H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	04H
	DB	0fdH
	DB	0ffH
	DB	01H
	DB	0fdH
	DB	01H
	DB	0ffH
	DB	0feH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	0ffH
	DB	02H
	DB	00H
	DB	01H
	DB	0feH
	DB	00H
	DB	02H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	04H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	02H
	DB	0ffH
	DB	0feH
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	01H
	DB	01H
	DB	0ffH
	DB	01H
	DB	0fdH
	DB	01H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	0fdH
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	02H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	00H
	DB	01H
	DB	0ffH
	DB	01H
	DB	02H
	DB	00H
	DB	01H
	DB	00H
	DB	0fdH
	DB	00H
	DB	00H
	DB	0ffH
	DB	05H
	DB	0feH
	DB	0feH
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	0feH
	DB	00H
	DB	01H
	DB	0ffH
	DB	02H
	DB	00H
	DB	0ffH
	DB	00H
	DB	03H
	DB	05H
	DB	01H
	DB	01H
	DB	02H
	DB	0feH
	DB	03H
	DB	02H
	DB	0fcH
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	0faH
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	0fcH
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0feH
	DB	00H
	DB	02H
	DB	0feH
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	03H
	DB	02H
	DB	00H
	DB	0feH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0feH
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	0fcH
	DB	00H
	DB	01H
	DB	03H
	DB	0feH
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	03H
	DB	0ffH
	DB	0feH
	DB	02H
	DB	00H
	DB	0feH
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	02H
	DB	0ffH
	DB	0fdH
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	0ffH
	DB	00H
	DB	01H
	DB	00H
	DB	0feH
	DB	01H
	DB	03H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	01H
	DB	0feH
	DB	0fdH
	DB	01H
	DB	00H
	DB	0ffH
	DB	02H
	DB	00H
	DB	00H
	DB	01H
	DB	0feH
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	01H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	00H
	DB	02H
	DB	02H
	DB	0ffH
	DB	0feH
	DB	0ffH
	DB	01H
	DB	01H
	DB	00H
	DB	02H
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	00H
	DB	01H
	DB	04H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	04H
	DB	0feH
	DB	00H
	DB	01H
	DB	0fcH
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	00H
	DB	00H
	DB	0feH
	DB	01H
	DB	02H
	DB	0ffH
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	02H
	DB	00H
	DB	0ffH
	DB	02H
	DB	0feH
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	00H
	DB	0fbH
	DB	01H
	DB	03H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	0feH
	DB	04H
	DB	0ffH
	DB	0fdH
	DB	00H
	DB	0feH
	DB	01H
	DB	02H
	DB	00H
	DB	01H
	DB	0ffH
	DB	01H
	DB	04H
	DB	02H
	DB	00H
	DB	0f7H
	DB	02H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	0fcH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0dH
	DB	00H
	DB	00H
	DB	0feH
	DB	0feH
	DB	0feH
	DB	01H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0feH
	DB	00H
	DB	00H
	DB	01H
	DB	0feH
	DB	02H
	DB	02H
	DB	00H
	DB	0fdH
	DB	01H
	DB	00H
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	00H
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0feH
	DB	01H
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	0fdH
	DB	02H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	03H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	03H
	DB	0fdH
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0feH
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	02H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	0fdH
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	01H
	DB	02H
	DB	00H
	DB	02H
	DB	0feH
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	0fcH
	DB	00H
	DB	0feH
	DB	00H
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0feH
	DB	01H
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	01H
	DB	0feH
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	02H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	0fdH
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	01H
	DB	00H
	DB	00H
	DB	02H
	DB	03H
	DB	00H
	DB	01H
	DB	02H
	DB	01H
	DB	00H
	DB	02H
	DB	0feH
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	0feH
	DB	0feH
	DB	00H
	DB	0ffH
	DB	00H
	DB	01H
	DB	0fdH
	DB	03H
	DB	01H
	DB	0ffH
	DB	0feH
	DB	01H
	DB	01H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	02H
	DB	0faH
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	03H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	00H
	DB	0fcH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	02H
	DB	00H
	DB	01H
	DB	01H
	DB	03H
	DB	01H
	DB	04H
	DB	01H
	DB	01H
	DB	0ffH
	DB	0fdH
	DB	00H
	DB	0fdH
	DB	00H
	DB	02H
	DB	0ffH
	DB	0fdH
	DB	0fdH
	DB	00H
	DB	0ffH
	DB	00H
	DB	01H
	DB	02H
	DB	00H
	DB	00H
	DB	01H
	DB	0feH
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0feH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	02H
	DB	0ffH
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	0ffH
	DB	00H
	DB	03H
	DB	01H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	0ffH
	DB	02H
	DB	04H
	DB	0fdH
	DB	01H
	DB	0ffH
	DB	0feH
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	00H
	DB	0feH
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	02H
	DB	00H
	DB	0fdH
	DB	0feH
	DB	01H
	DB	0feH
	DB	02H
	DB	02H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	05H
	DB	04H
	DB	02H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	0fbH
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	02H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	02H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0feH
	DB	00H
	DB	01H
	DB	0ffH
	DB	0feH
	DB	0feH
	DB	0ffH
	DB	01H
	DB	01H
	DB	0ffH
	DB	02H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	01H
	DB	00H
	DB	03H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	0feH
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0feH
	DB	00H
	DB	02H
	DB	00H
	DB	02H
	DB	0ffH
	DB	00H
	DB	01H
	DB	00H
	DB	02H
	DB	0feH
	DB	03H
	DB	02H
	DB	0fdH
	DB	0fcH
	DB	04H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0feH
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	02H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	02H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	0feH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	0feH
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	03H
	DB	00H
	DB	01H
	DB	03H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	01H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	03H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	03H
	DB	0ffH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	01H
	DB	0fdH
	DB	00H
	DB	0ffH
	DB	0feH
	DB	03H
	DB	00H
	DB	01H
	DB	0ffH
	DB	0feH
	DB	00H
	DB	01H
	DB	0feH
	DB	0ffH
	DB	0feH
	DB	01H
	DB	00H
	DB	00H
	DB	0feH
	DB	01H
	DB	02H
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	02H
	DB	0fcH
	DB	00H
	DB	0feH
	DB	01H
	DB	00H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	01H
	DB	0f5H
	DB	00H
	DB	00H
	DB	02H
	DB	02H
	DB	01H
	DB	0ffH
	DB	00H
	DB	02H
	DB	01H
	DB	02H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	01H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	0fdH
	DB	00H
	DB	00H
	DB	0fdH
	DB	00H
	DB	0fdH
	DB	02H
	DB	02H
	DB	0feH
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	02H
	DB	00H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	02H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	0feH
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	02H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	02H
	DB	0feH
	DB	03H
	DB	0fcH
	DB	02H
	DB	00H
	DB	00H
	DB	0feH
	DB	00H
	DB	0ffH
	DB	02H
	DB	00H
	DB	0feH
	DB	02H
	DB	0feH
	DB	02H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	03H
	DB	02H
	DB	0feH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	00H
	DB	01H
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	02H
	DB	00H
	DB	0feH
	DB	02H
	DB	00H
	DB	03H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	0ffH
	DB	02H
	DB	0fdH
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	0feH
	DB	0feH
	DB	02H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	01H
	DB	01H
	DB	0ffH
	DB	01H
	DB	0feH
	DB	01H
	DB	02H
	DB	0feH
	DB	00H
	DB	01H
	DB	0ffH
	DB	00H
	DB	01H
	DB	01H
	DB	0ffH
	DB	0fdH
	DB	02H
	DB	00H
	DB	00H
	DB	0feH
	DB	02H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	03H
	DB	00H
	DB	0feH
	DB	00H
	DB	01H
	DB	01H
	DB	0ffH
	DB	00H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	0feH
	DB	00H
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	0ffH
	DB	00H
	DB	02H
	DB	01H
	DB	0ffH
	DB	00H
	DB	01H
	DB	0feH
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0feH
	DB	01H
	DB	01H
	DB	0fdH
	DB	02H
	DB	01H
	DB	00H
	DB	0feH
	DB	01H
	DB	01H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	02H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	0feH
	DB	0ffH
	DB	02H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	01H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	0ffH
	DB	02H
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	00H
	DB	00H
	DB	0ffH
	DB	02H
	DB	00H
	DB	00H
	DB	0ffH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	0feH
	DB	01H
	DB	0ffH
	DB	00H
	DB	0ffH
	DB	02H
	DB	0feH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0ffH
	DB	01H
	DB	00H
	DB	01H
	DB	0fdH
	DB	00H
	DB	0ffH
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	02H
	DB	02H
	DB	01H
	DB	00H
	DB	00H
	DB	0f7H
	DB	02H
	DB	02H
	DB	03H
	DB	0ffH
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
PUBLIC	__real@37800000
PUBLIC	__real@4f800000
PUBLIC	?frand@@YGMXZ					; frand
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_seed	DD	01H DUP (?)
_BSS	ENDS
;	COMDAT __real@37800000
; File c:\users\joachim hofer\documents\mostlyharmless\mistymist_release3\i4k_ogl\src\mzk.cpp
CONST	SEGMENT
__real@37800000 DD 037800000r			; 1.52588e-005
CONST	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?frand@@YGMXZ
_TEXT	SEGMENT
tv71 = -4						; size = 4
?frand@@YGMXZ PROC					; frand, COMDAT

; 32   : {

	push	ebp
	mov	ebp, esp
	push	ecx

; 33   : 	unsigned long a = 214013;
; 34   : 	unsigned long c = 2531011;
; 35   : 	unsigned long m = 4294967296-1;
; 36   : 	seed = (seed * a + c) % m;

	mov	eax, DWORD PTR _seed
	imul	eax, 214013				; 000343fdH
	add	eax, 2531011				; 00269ec3H
	xor	edx, edx
	or	ecx, -1
	div	ecx

; 37   : 	//return (seed >> 8) % 65535;
; 38   : 	return (float)((seed>>8)%65535) * (1.0f/65536.0f);

	mov	ecx, 65535				; 0000ffffH
	mov	eax, edx
	mov	DWORD PTR _seed, eax
	shr	eax, 8
	xor	edx, edx
	div	ecx
	mov	DWORD PTR tv71[ebp], edx
	fild	DWORD PTR tv71[ebp]
	test	edx, edx
	jns	SHORT $LN3@frand
	fadd	DWORD PTR __real@4f800000
$LN3@frand:
	fmul	DWORD PTR __real@37800000

; 39   : }

	leave
	ret	0
?frand@@YGMXZ ENDP					; frand
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?exp2jo@@YGNN@Z
_TEXT	SEGMENT
_f$ = 8							; size = 8
?exp2jo@@YGNN@Z PROC					; exp2jo, COMDAT

; 42   : {

	push	ebp
	mov	ebp, esp

; 43   : 	__asm fld f;

	fld	QWORD PTR _f$[ebp]

; 44   : 	__asm fld st;

	fld	ST(0)

; 45   : 	__asm frndint;

	frndint

; 46   : 	__asm fsub st(1), st;

	fsub	ST(1), ST(0)

; 47   : 	__asm fxch;

	fxch	ST(1)

; 48   : 	__asm f2xm1;

	f2xm1

; 49   : 	__asm fld1;

	fld1

; 50   : 	__asm fadd;

	faddp	ST(1), ST(0)

; 51   : 	__asm fscale;

	fscale

; 52   : 	__asm fstp st(1);

	fstp	ST(1)

; 53   : 	__asm fstp f;

	fstp	QWORD PTR _f$[ebp]

; 54   : 
; 55   : 	return f;

	fld	QWORD PTR _f$[ebp]

; 56   : }

	pop	ebp
	ret	8
?exp2jo@@YGNN@Z ENDP					; exp2jo
_TEXT	ENDS
PUBLIC	__real@3fd0000000000000
PUBLIC	__real@401921fb4d12d84a
PUBLIC	__real@4024000000000000
PUBLIC	__real@3fa5555555555555
PUBLIC	__real@4010000000000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fb8000000000000
PUBLIC	__real@3f5b4e81b4e81b4f
PUBLIC	__real@400921fb4d12d84a
PUBLIC	__real@3fc0000000000000
PUBLIC	__real@3feccccccccccccd
PUBLIC	__real@3f000000
PUBLIC	?init_mzk_data@@YGXXZ				; init_mzk_data
;	COMDAT __real@3fd0000000000000
CONST	SEGMENT
__real@3fd0000000000000 DQ 03fd0000000000000r	; 0.25
CONST	ENDS
;	COMDAT __real@401921fb4d12d84a
CONST	SEGMENT
__real@401921fb4d12d84a DQ 0401921fb4d12d84ar	; 6.28319
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@3fa5555555555555
CONST	SEGMENT
__real@3fa5555555555555 DQ 03fa5555555555555r	; 0.0416667
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fb8000000000000
CONST	SEGMENT
__real@3fb8000000000000 DQ 03fb8000000000000r	; 0.09375
CONST	ENDS
;	COMDAT __real@3f5b4e81b4e81b4f
CONST	SEGMENT
__real@3f5b4e81b4e81b4f DQ 03f5b4e81b4e81b4fr	; 0.00166667
CONST	ENDS
;	COMDAT __real@400921fb4d12d84a
CONST	SEGMENT
__real@400921fb4d12d84a DQ 0400921fb4d12d84ar	; 3.14159
CONST	ENDS
;	COMDAT __real@3fc0000000000000
CONST	SEGMENT
__real@3fc0000000000000 DQ 03fc0000000000000r	; 0.125
CONST	ENDS
;	COMDAT __real@3feccccccccccccd
CONST	SEGMENT
__real@3feccccccccccccd DQ 03feccccccccccccdr	; 0.9
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?init_mzk_data@@YGXXZ
_TEXT	SEGMENT
tv1972 = -76						; size = 8
_deltaAmplitude$3468 = -76				; size = 8
_deltaPitch$3465 = -68					; size = 8
_output$3482 = -60					; size = 8
_startPitch$3463 = -52					; size = 8
_startAmplitude$3467 = -44				; size = 8
_curPitch$3458 = -36					; size = 8
tv2049 = -28						; size = 4
tv1530 = -28						; size = 4
tv2029 = -24						; size = 4
tv2028 = -24						; size = 4
tv1211 = -24						; size = 4
tv518 = -24						; size = 4
_band$3451 = -20					; size = 4
_overtone$ = -16					; size = 4
_frame$3459 = -12					; size = 4
tv1169 = -8						; size = 4
tv1639 = -4						; size = 4
_outpos$3427 = -4					; size = 4
?init_mzk_data@@YGXXZ PROC				; init_mzk_data, COMDAT

; 60   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 76					; 0000004cH
	push	ebx
	push	esi

; 61   : 	// Un-apply the rle compression of the pitch
; 62   : 	for (int i = 1; i < NUM_FRAMES; i++)

	xor	esi, esi
	inc	esi
	push	edi
	mov	ecx, esi
$LL51@init_mzk_d:

; 63   : 	{
; 64   : 		pitch[i] += pitch[i-1];

	mov	dl, BYTE PTR ?pitch@@3PADA[ecx-1]
	add	BYTE PTR ?pitch@@3PADA[ecx], dl
	inc	ecx
	cmp	ecx, 1191				; 000004a7H
	jl	SHORT $LL51@init_mzk_d

; 65   : 	}
; 66   : 
; 67   : 	// Un-apply the rle compression of the amplitudes in frequency domain
; 68   : 	for (int i = 0; i < NUM_DEFINED_FRAMES; i++)

	mov	ecx, OFFSET ?amplitude@@3PAY0M@DA	; amplitude
$LL48@init_mzk_d:

; 69   : 	{
; 70   : 		for (int band = 1; band < 12; band++)

	mov	eax, esi
$LL45@init_mzk_d:

; 71   : 		{
; 72   : 			amplitude[i][band] += amplitude[i][band-1];

	mov	dl, BYTE PTR [ecx+eax-1]
	add	BYTE PTR [ecx+eax], dl
	inc	eax
	cmp	eax, 12					; 0000000cH
	jl	SHORT $LL45@init_mzk_d

; 65   : 	}
; 66   : 
; 67   : 	// Un-apply the rle compression of the amplitudes in frequency domain
; 68   : 	for (int i = 0; i < NUM_DEFINED_FRAMES; i++)

	add	ecx, 12					; 0000000cH
	cmp	ecx, OFFSET ?amplitude@@3PAY0M@DA+1932
	jl	SHORT $LL48@init_mzk_d

; 73   : 		}
; 74   : 	}
; 75   : 
; 76   : 	// Go to double domain
; 77   : #if 0
; 78   : 	// This is not necessary, as the first frame is 0 anyways
; 79   : 	for (int band = 0; band < 12; band++)
; 80   : 	{
; 81   : 		d_amplitude[0][band] = (double)(amplitude[0][band]);
; 82   : 	}
; 83   : #endif
; 84   : 	for (int band = 0; band < 12; band++)

	xor	ebx, ebx
$LL42@init_mzk_d:

; 85   : 	{
; 86   : 		int outpos = 1;

	mov	DWORD PTR _outpos$3427[ebp], esi

; 87   : 		for (int i = 1; i < NUM_DEFINED_FRAMES; i++)

	mov	edi, esi
	lea	ecx, DWORD PTR ?amplitude@@3PAY0M@DA[ebx+12]
$LL39@init_mzk_d:

; 88   : 		{
; 89   : 			double delta = (double)amplitude[i][band] / double(frameStep[i]+1);

	movsx	eax, BYTE PTR [ecx]
	movsx	edx, BYTE PTR ?frameStep@@3PADA[edi]
	mov	DWORD PTR tv2049[ebp], eax
	inc	edx
	mov	DWORD PTR tv518[ebp], edx
	fild	DWORD PTR tv2049[ebp]
	fidiv	DWORD PTR tv518[ebp]

; 90   : 			for (int j = 0; j < frameStep[i]+1; j++)

	test	edx, edx
	jle	SHORT $LN91@init_mzk_d

; 88   : 		{
; 89   : 			double delta = (double)amplitude[i][band] / double(frameStep[i]+1);

	mov	eax, DWORD PTR _outpos$3427[ebp]
	imul	eax, 12					; 0000000cH
	add	eax, ebx

; 90   : 			for (int j = 0; j < frameStep[i]+1; j++)

	add	DWORD PTR _outpos$3427[ebp], edx
	lea	eax, DWORD PTR ?d_amplitude@@3PAY0M@NA[eax*8]
$LN36@init_mzk_d:

; 91   : 			{
; 92   : 				d_amplitude[outpos][band] = d_amplitude[(outpos-1)][band] + delta;

	fld	QWORD PTR [eax-96]
	fadd	ST(0), ST(1)
	fstp	QWORD PTR [eax]

; 93   : 				outpos++;

	add	eax, 96					; 00000060H
	dec	edx
	jne	SHORT $LN36@init_mzk_d

; 90   : 			for (int j = 0; j < frameStep[i]+1; j++)

	xor	esi, esi
	inc	esi
$LN91@init_mzk_d:
	inc	edi
	fstp	ST(0)
	add	ecx, 12					; 0000000cH
	cmp	edi, 161				; 000000a1H
	jl	SHORT $LL39@init_mzk_d

; 73   : 		}
; 74   : 	}
; 75   : 
; 76   : 	// Go to double domain
; 77   : #if 0
; 78   : 	// This is not necessary, as the first frame is 0 anyways
; 79   : 	for (int band = 0; band < 12; band++)
; 80   : 	{
; 81   : 		d_amplitude[0][band] = (double)(amplitude[0][band]);
; 82   : 	}
; 83   : #endif
; 84   : 	for (int band = 0; band < 12; band++)

	inc	ebx
	cmp	ebx, 12					; 0000000cH
	jl	SHORT $LL42@init_mzk_d

; 94   : 			}
; 95   : 		}
; 96   : 	}
; 97   : 
; 98   : 	// TODO: lots of unnecessary stuff here.
; 99   : 	// Generate noise
; 100  : 	seed = 1;

	mov	DWORD PTR _seed, esi
	mov	ebx, OFFSET ?noise@@3PANA		; noise
	mov	edi, OFFSET ?noise@@3PANA+8388608
$LL33@init_mzk_d:

; 101  : 	for (int samp = 0; samp < NOISE_LENGTH; samp++)
; 102  : 	{
; 103  : 		noise[samp] = frand() - 0.5;

	call	?frand@@YGMXZ				; frand
	fsub	DWORD PTR __real@3f000000
	fstp	QWORD PTR [ebx]
	add	ebx, 8
	cmp	ebx, edi
	jl	SHORT $LL33@init_mzk_d

; 104  : 	}
; 105  : 
; 106  : 	// filter the noise
; 107  : 	for (int multiplier = 0; multiplier < 2; multiplier++)

	push	2
	pop	ecx
$LL30@init_mzk_d:

; 108  : 	for (int samp = 1; samp < NOISE_LENGTH; samp++)

	mov	eax, OFFSET ?noise@@3PANA+8
$LL27@init_mzk_d:

; 109  : 	{
; 110  : 		noise[samp] = 0.125 * noise[samp] + 0.9 * noise[samp-1];

	fld	QWORD PTR [eax-8]
	fmul	QWORD PTR __real@3feccccccccccccd
	fld	QWORD PTR [eax]
	fmul	QWORD PTR __real@3fc0000000000000
	faddp	ST(1), ST(0)
	fstp	QWORD PTR [eax]
	add	eax, 8
	cmp	eax, edi
	jl	SHORT $LL27@init_mzk_d

; 104  : 	}
; 105  : 
; 106  : 	// filter the noise
; 107  : 	for (int multiplier = 0; multiplier < 2; multiplier++)

	dec	ecx
	jne	SHORT $LL30@init_mzk_d

; 119  : 	int overtone = 1;
; 120  : 	for (int band = 0; band < NUM_BANDS; band++)

	and	DWORD PTR _band$3451[ebp], ecx
	mov	DWORD PTR _seed, esi
	mov	DWORD PTR _overtone$[ebp], esi
	mov	DWORD PTR tv1639[ebp], OFFSET ?d_amplitude@@3PAY0M@NA+96
	jmp	SHORT $LN24@init_mzk_d
$LL86@init_mzk_d:

; 111  : 	}
; 112  : 
; 113  : 	///////////////////////////
; 114  : 	// generate the main sample
; 115  : 	///////////////////////////
; 116  : 
; 117  : 	// reset the random number generator
; 118  : 	seed = 1;

	xor	esi, esi
	inc	esi
$LN24@init_mzk_d:

; 121  : 	{
; 122  : 		int shifter = band/2 - 1;

	mov	eax, DWORD PTR _band$3451[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	dec	eax

; 123  : 		if (shifter < 0) shifter = 0;

	jns	SHORT $LN21@init_mzk_d
	xor	eax, eax
$LN21@init_mzk_d:

; 124  : 		int numBandTones = 1 << shifter;

	mov	ecx, eax
	shl	esi, cl

; 125  : 		// Generate sound
; 126  : 		double curPitch = frand() * 3.1415926 * 2.0;

	call	?frand@@YGMXZ				; frand
	fmul	QWORD PTR __real@400921fb4d12d84a
	mov	ecx, DWORD PTR tv1639[ebp]

; 127  : 		for (int frame = 0; frame < NUM_FRAMES - 1; frame++)

	xor	edi, edi
	fadd	ST(0), ST(0)
	mov	DWORD PTR _frame$3459[ebp], edi
	mov	DWORD PTR tv1530[ebp], ecx
	fstp	QWORD PTR _curPitch$3458[ebp]
$LL87@init_mzk_d:

; 128  : 		{
; 129  : 			double startPitch = (double)pitch[frame];

	mov	eax, DWORD PTR _frame$3459[ebp]
	lea	eax, DWORD PTR ?pitch@@3PADA[eax+1]
	movsx	edx, BYTE PTR [eax-1]

; 130  : 			double deltaPitch = (double)(pitch[frame+1] - startPitch) * (1.0/FRAME_STEP);

	movsx	eax, BYTE PTR [eax]
	mov	DWORD PTR tv2029[ebp], edx

; 131  : 			double startAmplitude = d_amplitude[frame][band];
; 132  : 			double deltaAmplitude = (d_amplitude[(frame+1)][band] - startAmplitude) * (1.0/FRAME_STEP);
; 133  : 			for (int i = 0; i < FRAME_STEP; i++)

	xor	ebx, ebx
	fild	DWORD PTR tv2029[ebp]
	mov	DWORD PTR tv2028[ebp], eax
	fstp	QWORD PTR _startPitch$3463[ebp]
	fild	DWORD PTR tv2028[ebp]
	fsub	QWORD PTR _startPitch$3463[ebp]
	fld	QWORD PTR __real@3f5b4e81b4e81b4f
	fmul	ST(1), ST(0)
	fxch	ST(1)
	fstp	QWORD PTR _deltaPitch$3465[ebp]
	fld	QWORD PTR [ecx-96]
	fstp	QWORD PTR _startAmplitude$3467[ebp]
	fld	QWORD PTR [ecx]
	fsub	QWORD PTR _startAmplitude$3467[ebp]
	fmulp	ST(1), ST(0)
	fstp	QWORD PTR _deltaAmplitude$3468[ebp]
$LL88@init_mzk_d:

; 134  : 			{
; 135  : 				for (int bandTone = 0; bandTone < numBandTones; bandTone++)

	test	esi, esi
	jle	$LN12@init_mzk_d
	mov	ecx, DWORD PTR _overtone$[ebp]
	mov	DWORD PTR tv1169[ebp], ecx
	imul	ecx, 16768				; 00004180H
	lea	edx, DWORD PTR [edi+ebx]
	add	ecx, edi
	shl	edx, 4
	add	ecx, ebx
	mov	DWORD PTR tv1211[ebp], esi
$LL89@init_mzk_d:

; 136  : 				{	
; 137  : 					//double noisyness = (double)(band) * 0.125f;
; 138  : 					//double noisyness = (double)(band) * (0.0625f + 0.03125f);
; 139  : 					//double noisyness = (double)(overtone+bandTone) * (0.0625f);
; 140  : 					double noisyness = (double)(overtone+bandTone) * (0.0625f+0.03125f) - 0.5f;

	fild	DWORD PTR tv1169[ebp]
	fld	QWORD PTR __real@3fb8000000000000
	fmul	ST(0), ST(1)
	fsub	QWORD PTR __real@3fe0000000000000

; 141  : 					if (noisyness > 1.0) noisyness = 1.0;					

	fld1
	fcom	ST(1)
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN11@init_mzk_d
	fstp	ST(1)
	fld	ST(0)
	fxch	ST(1)
$LN11@init_mzk_d:

; 142  : 					if (noisyness < 0.0) noisyness = 0.0;

	fldz
	fcom	ST(2)
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN101@init_mzk_d
	fstp	ST(2)
	jmp	SHORT $LN10@init_mzk_d
$LN101@init_mzk_d:
	fstp	ST(0)
$LN10@init_mzk_d:

; 145  : 					double output = sin(curPitch*(overtone+bandTone)) * t;

	fxch	ST(2)
	mov	eax, ecx
	and	eax, -2146435073			; 800fffffH
	fmul	QWORD PTR _curPitch$3458[ebp]
	fsin
	jns	SHORT $LN117@init_mzk_d

; 143  : 					double t = noisyness * 4. * noise[(i+FRAME_STEP*frame+16768*(overtone+bandTone))%NOISE_LENGTH] +
; 144  : 						       (1.0-noisyness);

	dec	eax
	or	eax, -1048576				; fff00000H
	inc	eax
$LN117@init_mzk_d:
	fld	ST(1)

; 146  : 					wave[i+FRAME_STEP*frame][0] += exp2jo(startAmplitude) * output;

	push	ecx
	fmul	QWORD PTR __real@4010000000000000
	push	ecx
	fmul	QWORD PTR ?noise@@3PANA[eax*8]
	fxch	ST(3)
	fsubrp	ST(2), ST(0)
	fxch	ST(2)
	faddp	ST(1), ST(0)
	fmulp	ST(1), ST(0)
	fstp	QWORD PTR _output$3482[ebp]
	fld	QWORD PTR _startAmplitude$3467[ebp]
	fstp	QWORD PTR [esp]
	call	?exp2jo@@YGNN@Z				; exp2jo
	fmul	QWORD PTR _output$3482[ebp]

; 147  : 					wave[i+FRAME_STEP*frame][1] += exp2jo(startAmplitude) * output;

	push	ecx
	push	ecx
	fadd	QWORD PTR ?wave@@3PAY01NA[edx]
	fstp	QWORD PTR ?wave@@3PAY01NA[edx]
	fld	QWORD PTR _startAmplitude$3467[ebp]
	fstp	QWORD PTR [esp]
	call	?exp2jo@@YGNN@Z				; exp2jo
	fmul	QWORD PTR _output$3482[ebp]
	add	ecx, 16768				; 00004180H
	inc	DWORD PTR tv1169[ebp]
	dec	DWORD PTR tv1211[ebp]
	fadd	QWORD PTR ?wave@@3PAY01NA[edx+8]
	fstp	QWORD PTR ?wave@@3PAY01NA[edx+8]
	jne	$LL89@init_mzk_d
$LN12@init_mzk_d:

; 148  : 				}
; 149  : 				//double jitter = noise[(i+FRAME_STEP*frame)%NOISE_LENGTH] * 0.002;
; 150  : 				//double jitter = sin((i+FRAME_STEP*frame)*0.005) * 0.0004;
; 151  : 				double jitter = 0.0;
; 152  : 				curPitch += exp2jo(startPitch * (1.0/24) - 10.0) + jitter;

	fld	QWORD PTR _startPitch$3463[ebp]
	push	ecx
	fmul	QWORD PTR __real@3fa5555555555555
	push	ecx
	fsub	QWORD PTR __real@4024000000000000
	fstp	QWORD PTR [esp]
	call	?exp2jo@@YGNN@Z				; exp2jo
	fadd	QWORD PTR _curPitch$3458[ebp]
	fstp	QWORD PTR _curPitch$3458[ebp]

; 153  : 				startPitch += deltaPitch;

	fld	QWORD PTR _deltaPitch$3465[ebp]
	fadd	QWORD PTR _startPitch$3463[ebp]
	fstp	QWORD PTR _startPitch$3463[ebp]

; 154  : 				startAmplitude += deltaAmplitude;

	fld	QWORD PTR _deltaAmplitude$3468[ebp]
	fadd	QWORD PTR _startAmplitude$3467[ebp]
	fstp	QWORD PTR _startAmplitude$3467[ebp]

; 155  : 				while (curPitch > 2.*3.1415926) curPitch -= 2.*3.1415926;

	fld	QWORD PTR __real@401921fb4d12d84a
$LN119@init_mzk_d:
	fcom	QWORD PTR _curPitch$3458[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN105@init_mzk_d
	fld	QWORD PTR _curPitch$3458[ebp]
	fsub	ST(0), ST(1)
	fstp	QWORD PTR _curPitch$3458[ebp]
	jmp	SHORT $LN119@init_mzk_d
$LN105@init_mzk_d:

; 131  : 			double startAmplitude = d_amplitude[frame][band];
; 132  : 			double deltaAmplitude = (d_amplitude[(frame+1)][band] - startAmplitude) * (1.0/FRAME_STEP);
; 133  : 			for (int i = 0; i < FRAME_STEP; i++)

	inc	ebx

; 155  : 				while (curPitch > 2.*3.1415926) curPitch -= 2.*3.1415926;

	fstp	ST(0)
	cmp	ebx, 600				; 00000258H
	jl	$LL88@init_mzk_d

; 127  : 		for (int frame = 0; frame < NUM_FRAMES - 1; frame++)

	mov	ecx, DWORD PTR tv1530[ebp]
	inc	DWORD PTR _frame$3459[ebp]
	add	ecx, 96					; 00000060H
	add	edi, 600				; 00000258H
	mov	DWORD PTR tv1530[ebp], ecx
	cmp	edi, 714000				; 000ae510H
	jl	$LL87@init_mzk_d

; 156  : 			}
; 157  : 		}
; 158  : 
; 159  : 		overtone += numBandTones;

	add	DWORD PTR _overtone$[ebp], esi
	add	DWORD PTR tv1639[ebp], 8
	inc	DWORD PTR _band$3451[ebp]
	cmp	DWORD PTR tv1639[ebp], OFFSET ?d_amplitude@@3PAY0M@NA+192
	jl	$LL86@init_mzk_d

; 160  : 	}
; 161  : 
; 162  : 	// reverb
; 163  : 	for (int reverb = 0; reverb < 16; reverb++)

	fld	QWORD PTR __real@3fd0000000000000
	xor	ebx, ebx
	mov	edi, 791400				; 000c1368H
$LN7@init_mzk_d:

; 164  : 	{
; 165  : 		int delay = (int)frand() * 4096 + 2048;

	call	?frand@@YGMXZ				; frand
	fistp	QWORD PTR tv1972[ebp]
	mov	esi, DWORD PTR tv1972[ebp]
	shl	esi, 12					; 0000000cH
	add	esi, 2048				; 00000800H

; 166  : 		double inc1 = frand() * 0.25;

	call	?frand@@YGMXZ				; frand
	fmul	ST(0), ST(1)

; 167  : 		double inc2 = 0.25 - inc1;

	fld	ST(1)
	fsub	ST(0), ST(1)

; 168  : 		if (frand() < 0.5)

	call	?frand@@YGMXZ				; frand
	fcomp	DWORD PTR __real@3f000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN4@init_mzk_d

; 169  : 		{
; 170  : 			inc1 = -inc1;

	fxch	ST(1)
	fchs

; 171  : 			inc2 = -inc2;

	fxch	ST(1)
	fchs
$LN4@init_mzk_d:

; 172  : 		}
; 173  : 		for (int samp = delay; samp < WAVE_LENGTH; samp++)

	cmp	esi, edi
	jge	SHORT $LN114@init_mzk_d
	mov	eax, ebx
	and	eax, 1
	lea	ecx, DWORD PTR [eax+esi*2]
	mov	eax, ebx
	cdq
	sub	eax, edx
	sar	eax, 1
	and	eax, 1
	lea	edx, DWORD PTR ?wave@@3PAY01NA[eax*8+16]
	mov	eax, edi
	lea	ecx, DWORD PTR ?wave@@3PAY01NA[ecx*8]
	sub	eax, esi
$LN3@init_mzk_d:

; 174  : 		{
; 175  : 			wave[samp][reverb&1] += inc1 * wave[samp-delay][(reverb/2)&1];

	fld	QWORD PTR [edx-16]
	fmul	ST(0), ST(2)
	fadd	QWORD PTR [ecx]
	fst	QWORD PTR [ecx]

; 176  : 			wave[samp][reverb&1] += inc2 * wave[samp-delay+1][(reverb/2)&1];

	fld	ST(1)
	fmul	QWORD PTR [edx]
	add	edx, 16					; 00000010H
	faddp	ST(1), ST(0)
	fstp	QWORD PTR [ecx]
	add	ecx, 16					; 00000010H
	dec	eax
	jne	SHORT $LN3@init_mzk_d
$LN114@init_mzk_d:

; 160  : 	}
; 161  : 
; 162  : 	// reverb
; 163  : 	for (int reverb = 0; reverb < 16; reverb++)

	inc	ebx

; 172  : 		}
; 173  : 		for (int samp = delay; samp < WAVE_LENGTH; samp++)

	fstp	ST(1)
	fstp	ST(0)
	cmp	ebx, 16					; 00000010H
	jl	$LN7@init_mzk_d

; 160  : 	}
; 161  : 
; 162  : 	// reverb
; 163  : 	for (int reverb = 0; reverb < 16; reverb++)

	pop	edi
	fstp	ST(0)
	pop	esi
	pop	ebx

; 177  : 		}
; 178  : 	}
; 179  : }

	leave
	ret	0
?init_mzk_data@@YGXXZ ENDP				; init_mzk_data
_TEXT	ENDS
PUBLIC	?mzk_init@@YGXPAF@Z				; mzk_init
; Function compile flags: /Ogsp
;	COMDAT ?mzk_init@@YGXPAF@Z
_TEXT	SEGMENT
tv608 = -8						; size = 8
tv650 = -4						; size = 4
_buffer$ = 8						; size = 4
?mzk_init@@YGXPAF@Z PROC				; mzk_init, COMDAT

; 183  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	ecx
	push	esi
	push	edi

; 184  : 	// init music data
; 185  : 	init_mzk_data();

	call	?init_mzk_data@@YGXXZ			; init_mzk_data

; 186  : 
; 187  : 	// TODO: SCRIPT!
; 188  : 
; 189  : 	int pos = 0;

	xor	esi, esi

; 190  : 	for (int k = 0; k < NUM_NOTES; k++)

	xor	edx, edx
$LL11@mzk_init:

; 191  : 	{
; 192  : 		pos += PATTERN_LENGTH*(int)(startTime[k]);

	movsx	eax, BYTE PTR _startTime[edx]
	imul	eax, 159000				; 00026d18H
	add	esi, eax

; 193  : 		double vol = exp2jo(volume[k]);

	movsx	eax, BYTE PTR _volume[edx]
	mov	DWORD PTR tv650[ebp], eax
	push	ecx
	push	ecx
	fild	DWORD PTR tv650[ebp]
	fstp	QWORD PTR [esp]
	call	?exp2jo@@YGNN@Z				; exp2jo

; 194  : 		int curPos = pos;
; 195  : 		int samplePos = INSTRUMENT_LENGTH*(int)(instrument[k]);

	movsx	eax, BYTE PTR _instrument[edx]
	imul	eax, 183600				; 0002cd30H
	mov	ecx, esi
	shl	ecx, 4
	shl	eax, 4
	add	ecx, OFFSET ?outwave@@3PAY01NA+8
	add	eax, OFFSET ?wave@@3PAY01NA+8
	mov	edi, 183600				; 0002cd30H
$LN8@mzk_init:

; 196  : 
; 197  : 		for (int j = 0; j < INSTRUMENT_LENGTH; j++)
; 198  : 		{
; 199  : 			double waveval = vol * wave[j + samplePos][0];

	fld	QWORD PTR [eax-8]
	fmul	ST(0), ST(1)

; 200  : 			outwave[curPos][0] += waveval;

	fadd	QWORD PTR [ecx-8]
	fstp	QWORD PTR [ecx-8]

; 201  : 			waveval = vol * wave[j + samplePos][1];

	fld	ST(0)
	fmul	QWORD PTR [eax]
	add	eax, 16					; 00000010H

; 202  : 			outwave[curPos][1] += waveval;

	fadd	QWORD PTR [ecx]
	fstp	QWORD PTR [ecx]

; 203  : 
; 204  : 			curPos++;

	add	ecx, 16					; 00000010H
	dec	edi
	jne	SHORT $LN8@mzk_init

; 205  : 		}
; 206  : 
; 207  : 		pos += PATTERN_LENGTH;

	add	esi, 159000				; 00026d18H
	fstp	ST(0)
	inc	edx
	cmp	edx, 36					; 00000024H
	jl	SHORT $LL11@mzk_init

; 208  : 	}
; 209  : 
; 210  : #if 0 // I scriptified
; 211  : 	// move base to output
; 212  : 	for (int k = 0; k < 30; k++)
; 213  : 	{
; 214  : 		double volume = 1.0;
; 215  : 
; 216  : 		if (k < 8)
; 217  : 		{
; 218  : 			volume = k * 0.25 + 0.25;
; 219  : 		}
; 220  : 
; 221  : 		int pos = k*(PATTERN_LENGTH);
; 222  : 		for (int j = 0; j < BASS_LENGTH; j++)
; 223  : 		{
; 224  : 			double waveval = volume * wave[j + BASS_START];
; 225  : 
; 226  : 			outwave[pos][0] += waveval;
; 227  : 			outwave[pos][1] += waveval;
; 228  : 
; 229  : 			pos++;
; 230  : 		}
; 231  : 	}
; 232  : 
; 233  : 	// Add the first voice
; 234  : 	for (int k = 0; k < 4; k++)
; 235  : 	{
; 236  : 		int pos = (k+8)*PATTERN_LENGTH;
; 237  : 		for (int j = 0; j < BASS_LENGTH; j++)
; 238  : 		{
; 239  : 			double waveval = wave[j];
; 240  : 
; 241  : 			outwave[pos][0] += waveval;
; 242  : 			outwave[pos][1] += waveval;
; 243  : 
; 244  : 			pos++;
; 245  : 		}
; 246  : 	}
; 247  : 
; 248  : 	// Add the second voice
; 249  : 	for (int k = 0; k < 8; k++)
; 250  : 	{
; 251  : 		int pos = (k+8+6)*PATTERN_LENGTH;
; 252  : 		if (k < 2 || k > 5)
; 253  : 		for (int j = 0; j < BASS_LENGTH; j++)
; 254  : 		{
; 255  : 			double waveval = wave[j+CODING_START];
; 256  : 
; 257  : 			outwave[pos][0] += waveval;
; 258  : 			outwave[pos][1] += waveval;
; 259  : 
; 260  : 			pos++;
; 261  : 		}
; 262  : 	}
; 263  : #endif
; 264  : 
; 265  : 
; 266  : #if 0
; 267  : 	// filter base
; 268  : 	for (int channel = 0; channel < 2; channel++)
; 269  : 	{
; 270  : 		double cutoff;
; 271  : 		double f, p, q;
; 272  : 		//q = 1.0f - 0.005; // 1. - cutoff
; 273  : 		for (int k = 0; k < 5; k++) filterY[k] = 0.0f;
; 274  : 	
; 275  : 		for (int samp = 0; samp < MZK_NUMSAMPLES; samp++)
; 276  : 		{
; 277  : 			if (samp < 2*PATTERN_LENGTH)
; 278  : 			{
; 279  : 				cutoff = 0.002;
; 280  : 			}
; 281  : 			else
; 282  : 			{
; 283  : 				//if (samp < 5 * PATTERN_LENGTH)
; 284  : 				//{
; 285  : 				//	cutoff = 0.2 * (samp-2*PATTERN_LENGTH) / 3*PATTERN_LENGTH + 0.002;
; 286  : 				//}
; 287  : 				//else
; 288  : 				{
; 289  : 					cutoff = 0.02;
; 290  : 				}
; 291  : 			}
; 292  : 			
; 293  : 			q = 1.0f - cutoff; // 1. - cutoff
; 294  : 			p = cutoff + 0.8f * cutoff * q; //cutoffFreq + 0.8f * cutoffFreq * q;
; 295  : 			f = p + p - 1.0f;
; 296  : 			q = 0.5;// / (cutoffFreq + 0.25);
; 297  : 
; 298  : 			outwave[samp][channel] = filter(outwave[samp][channel], f, p, q, 0);
; 299  : 		}
; 300  : 	}
; 301  : #endif
; 302  : 
; 303  : #if 1
; 304  : 	// move sample to output
; 305  : 	for (int k = 0; k < MZK_NUMSAMPLESC; k++)

	mov	esi, DWORD PTR _buffer$[ebp]
	mov	edx, OFFSET ?outwave@@3PAY01NA		; outwave
	mov	ecx, 32767				; 00007fffH
	mov	edi, -32767				; ffff8001H
$LL5@mzk_init:

; 306  : 	{
; 307  : 		// mono...
; 308  : 		int waveval = (int)outwave[0][k];

	fld	QWORD PTR [edx]
	fistp	QWORD PTR tv608[ebp]
	mov	eax, DWORD PTR tv608[ebp]

; 309  : 		
; 310  : 		/* limiter */
; 311  : 		if (waveval > 32767) waveval = 32767;

	cmp	eax, ecx
	jle	SHORT $LN2@mzk_init
	mov	eax, ecx
$LN2@mzk_init:

; 312  : 		if (waveval < -32767) waveval = -32767;

	cmp	eax, edi
	jge	SHORT $LN1@mzk_init
	mov	eax, edi
$LN1@mzk_init:

; 313  : 
; 314  : 		buffer[k] = (short)waveval;

	mov	WORD PTR [esi], ax
	add	edx, 8
	add	esi, 2
	cmp	edx, OFFSET ?outwave@@3PAY01NA+77616000
	jl	SHORT $LL5@mzk_init
	pop	edi
	pop	esi

; 315  : 	}
; 316  : #endif
; 317  : }

	leave
	ret	4
?mzk_init@@YGXPAF@Z ENDP				; mzk_init
_TEXT	ENDS
END
