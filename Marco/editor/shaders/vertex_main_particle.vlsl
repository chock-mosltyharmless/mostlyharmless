#version 330 core

layout (location=0) in vec4 position_;
layout (location=1) in vec4 color_;

out vec4 particle_color_;
out float particle_magic_;

uniform float time;
uniform mat4 r;
uniform mat4 R;

void main(void) {
	vec3 pos = position_.xyz;

    vec3 move_pos = vec3(0.3 * time + 0.5 * sin(time*0.5), 5.0 * sin(time * 0.05), 8.0 * sin(time * 0.03)) + pos;
    vec3 swirl_pos = move_pos
        + sin(move_pos.x + cos(5.0 * move_pos.y)) * vec3(0.7, -0.4, 0.3)
        + sin(move_pos.y + cos(0.3 * move_pos.z)) * vec3(-0.6, 0.2, -0.8)
        + cos(move_pos.z + sin(4.0 * move_pos.x)) * vec3(0.6, 0.8, -0.9);
    swirl_pos = swirl_pos
        + sin(swirl_pos.x + cos(5.0 * swirl_pos.y)) * vec3(0.7, -0.4, 0.3)
        + sin(swirl_pos.y + cos(0.3 * swirl_pos.z)) * vec3(-0.6, 0.2, -0.8)
        + cos(swirl_pos.z + sin(4.0 * swirl_pos.x)) * vec3(0.6, 0.8, -0.9);


    vec3 box_pos = fract(swirl_pos + vec3(0.5)) - vec3(0.5);

    vec3 rel_pos = vec3(0.0, box_pos.yz);
    float dist = length(rel_pos);
    
    float move_amount = 1.0 / (1.0 + 3.0 * dist);
    vec3 new_pos = pos - move_amount * rel_pos;

    float hue_t = 0.5 * sin(swirl_pos.x) + 0.5;
    vec3 hue = mix(vec3(1.0, 0.7, 0.0), vec3(0.0, 0.5, 1.0), hue_t);
    float brightness = 0.5 * sin(swirl_pos.y) + 0.5;
    float saturation = 0.5 * sin(swirl_pos.z) + 0.5;

    particle_color_.rgb = mix(hue, vec3(1.0, 1.0, 1.0), saturation) * brightness;
    particle_color_.a = smoothstep(0.0, 1.0, 1.0 - dist);

    // Move to show what's going on
    new_pos.z += 0.5 * sin(0.4 * time) + 0.7;

	gl_Position = vec4(new_pos, new_pos.z);
    particle_magic_ = color_.a;
}