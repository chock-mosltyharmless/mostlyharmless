void main(void) {                                              
float height = ppos.y;                                                
height += vnoise1(vec3(ppos*0.1 + spike*slider2*0.1, time*0.1) + 
vnoise8(vec3(ppos*0.05, 0.3), 0.5).rgb).r;
height = smoothstep(-1.5, 0.9, height);                               
vec3 color = mix(vec3(1.5,0.9,0.5),vec3(0.0),height);                 
                                                        
vec3 rayPos = vec3(0.0, 0.0, -8.0);                        
vec3 rayDir = normalize(vec3(ppos, 2.0));     
float totalDensity = 0.0;       
vec3 totalColor = vec3(0.0);                                    
                                                                      
rayDir.xz = rotate(rayDir.xz, time);                                  
rayPos.xz = rotate(rayPos.xz, time);                                  
                                                                      
for (int i=0; i<100 && length(rayPos)<12.; i++){        
float implicit = length(rayPos + 0.7 + vnoise3(rayPos*0.03 -
vec3(time*0.03),0.6).rgb) - 2.0;                          
                                                                      
totalDensity += 0.01;      
totalColor += vec3(0.02, 0.03, 0.04); 
                               
rayPos += max(0.03, abs(implicit)*0.6) * rayDir; 
}                                                                     
                                                                      
color = mix(color, totalColor, totalDensity); 
gl_FragColor = vec4(color, 1.0);                                      
}                                                                     
