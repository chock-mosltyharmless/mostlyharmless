void main(void) {                                                     
float height = ppos.y;                                                
height += vnoise1(vec3(ppos*0.1 + spike*slider2*0.1, time*0.1) +      
vnoise8(vec3(ppos*0.05 - time*vec2(0.005), 0.3), 0.5).rgb).r *        
slider1;                                                              
height = smoothstep(-2.0, 0.9, height);                               
vec3 color = mix(vec3(1.5,0.9,0.5),vec3(0.0),height);                 
                                                                      
vec3 rayPos = vec3(0.0, 0.0, -8.0);                                   
vec3 rayDir = normalize(vec3(ppos * vec2(1.3,1.0), 2.0));             
float tDens = 0.0;                                                    
vec3 tCol = vec3(0.0);                                                
                                                                      
rayDir.xz = rotate(rayDir.xz, time);                                  
rayPos.xz = rotate(rayPos.xz, time);                                  
                                                                      
for (int i=0; i<100 && tDens<0.95 && length(rayPos)<12.; i++){        
float impl = length(rayPos + vnoise3(rayPos*0.03-vec3(time*0.03),     
0.6).rgb) - 2.5;                                                      
                                                                      
tDens += 0.01;                                                        
tCol += vec3(0.02, 0.03, 0.04);                                       
                                                                      
float stepSize = max(0.05, abs(impl)*0.6);                            
rayPos += stepSize * rayDir;                                          
}                                                                     
                                                                      
color = mix(color, tCol, tDens);                                      
                                                                      
gl_FragColor = vec4(color, 1.0);                                      
}                                                                     
                                                                      
